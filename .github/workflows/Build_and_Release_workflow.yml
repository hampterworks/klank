name: Build and Release

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        platform: [windows-latest, ubuntu-latest, macos-latest]
      fail-fast: false

    runs-on: ${{ matrix.platform }}
    name: Build (${{ matrix.platform }})

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Install Windows Build Tools
        if: matrix.platform == 'windows-latest'
        uses: microsoft/setup-msbuild@v1.1

      - name: Install Linux Dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            librsvg2-dev \
            patchelf \
            libglib2.0-dev \
            build-essential \
            libssl-dev \
            libayatana-appindicator3-dev

      - name: Setup Node and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'windows-latest' && 'x86_64-pc-windows-msvc' || matrix.platform == 'macos-latest' && 'aarch64-apple-darwin x86_64-apple-darwin' || 'x86_64-unknown-linux-gnu' }}

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Install Dependencies
        run: |
          corepack enable
          yarn install
        env:
          YARN_ENABLE_IMMUTABLE_INSTALLS: false

      - name: Build Turbo Repo
        run: yarn build
        continue-on-error: true

      - name: Build Tauri App
        run: yarn tauri build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_INCREMENTAL: 0
          RUST_BACKTRACE: 1
          MACOSX_DEPLOYMENT_TARGET: '10.13'
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE != '' }}

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-artifacts
          path: |
            **/apps/web/src-tauri/target/release/bundle/msi/*.msi
            **/apps/web/src-tauri/target/release/bundle/nsis/*.exe
            **/apps/web/src-tauri/target/release/bundle/dmg/*.dmg
            **/apps/web/src-tauri/target/release/bundle/deb/*.deb
          if-no-files-found: warn
          compression-level: 0

  release:
    needs: build
    runs-on: ubuntu-latest
    if: success() || failure()

    steps:
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Generate safe tag name
        id: safe_tag
        run: |
          echo "safe_tag=release-${{ steps.date.outputs.date }}-${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Display structure of downloaded files
        run: |
          echo "Listing all files in artifacts directory:"
          find artifacts -type f
          echo "Contents of artifacts directory:"
          ls -R artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.safe_tag.outputs.safe_tag }}
          name: Release from main (${{ steps.date.outputs.date }})
          draft: false
          prerelease: false
          fail_on_unmatched_files: false
          files: |
            artifacts/**/*.msi
            artifacts/**/*.exe
            artifacts/**/*.deb
            artifacts/**/*.AppImage
            artifacts/**/*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

